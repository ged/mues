<?xml version="1.0"?>
<!--

	Multi-User Environment Server Configuration File DTD
    Time-stamp: <07-Sep-2002 23:21:09 deveiant>
	$Id: muesconfig.dtd,v 1.7 2002/09/12 09:54:12 deveiant Exp $

	Michael Granger - ged@FaerieMUD.org
	Time-stamp: "26-May-2002 22:22:46 deveiant"

	Copyright (c) 2002, The FaerieMUD Consortium. All rights reserved.

    You may use, modify, and/or redistribute this DTD under the terms of the
    Perl Artistic License, a copy of which should have been included in this
    distribution (See the file Artistic). If it was not, a copy of it may be
    obtained from http://language.perl.com/misc/Artistic.html or
    http://www.faeriemud.org/artistic.html).

 -->


<!-- 

 Entities

  -->

<!-- A version string for the configuration format (eg., 1.1) -->
<!ENTITY % FormatVersion    "CDATA">

<!-- A version string like $Revision: 1.7 $ -->
<!ENTITY % CVSVersion       "CDATA">

<!-- one or more digits -->
<!ENTITY % Number           "CDATA">

<!-- used for titles etc. -->
<!ENTITY % Text             "CDATA">

<!-- Name of a Ruby class -->
<!ENTITY % ClassName        "CDATA">


<!--

  Base element

  -->

<!ELEMENT muesconfig            (general,engine,login,logging,environments,commandshell)>
<!ATTLIST muesconfig
            version             %FormatVersion;     #REQUIRED
            time-stamp          %Number;            #REQUIRED
            revision            %CVSVersion;        #IMPLIED>



<!-- General config section -->
<!ELEMENT general               (server-name,server-description,server-admin,root-dir,motd)>

<!ELEMENT server-name           (#PCDATA)>
<!ELEMENT server-description    (#PCDATA)>
<!ELEMENT server-admin          (#PCDATA)>
<!ELEMENT root-dir              (#PCDATA)>
<!ELEMENT motd                  (#PCDATA)>


<!-- Engine config section -->
<!ELEMENT engine                (tick-length,exception-stack-size,debug-level,poll-interval,
                                eventqueue,privilegedeventqueue,objectstore,listeners)>
<!ELEMENT tick-length           (#PCDATA)>
<!ELEMENT poll-interval         (#PCDATA)>
<!ELEMENT exception-stack-size  (#PCDATA)>
<!ELEMENT debug-level           (#PCDATA)>

<!ELEMENT eventqueue            (minworkers,maxworkers,threshold,safelevel)>
<!ELEMENT privilegedeventqueue  (minworkers,maxworkers,threshold,safelevel)>
<!ELEMENT minworkers            (#PCDATA)>
<!ELEMENT maxworkers            (#PCDATA)>
<!ELEMENT threshold             (#PCDATA)>
<!ELEMENT safelevel             (#PCDATA)>

<!ELEMENT listeners             (listener)*>

<!ELEMENT listener              (param*)>
<!ATTLIST listener
            name                ID                  #REQUIRED
            class               %ClassName;         #REQUIRED>


<!-- Login config section -->
<!ELEMENT login                 (maxtries,timeout,banner,userprompt,passprompt)>
<!ELEMENT maxtries              (#PCDATA)>
<!ELEMENT timeout               (#PCDATA)>
<!ELEMENT banner                (#PCDATA)>
<!ELEMENT userprompt            (#PCDATA)>
<!ELEMENT passprompt            (#PCDATA)>


<!-- Logging config section (Log4R format) -->
<!ELEMENT logging               (log4r_config)>

<!-- 

    This is an approximation of the Log4r XML format. It's actually a freeform
    format, but I like to be able to validate, so I just narrowed it so it's
    still flexible, but also validatable.

  -->
<!ELEMENT log4r_config          (pre_config,(outputter|logger)*)>

<!ELEMENT pre_config            (parameter)*>
<!ELEMENT parameter             EMPTY>
<!ATTLIST parameter
            name                %Text;              #REQUIRED
            value               %Text;              #REQUIRED>

<!ELEMENT outputter             ANY>
<!ATTLIST outputter
            type                %Text;              #REQUIRED
            name                %Text;              #REQUIRED
            level               %Text;              #IMPLIED
            filename            %Text;              #IMPLIED
            trunc               %Text;              #IMPLIED
            server              %Text;              #IMPLIED
            port                %Text;              #IMPLIED
            from                %Text;              #IMPLIED
            to                  %Text;              #IMPLIED
            fdno                %Text;              #IMPLIED>

<!ELEMENT logger                ANY>
<!ATTLIST logger
            name                %Text;              #REQUIRED
            level               %Text;              #REQUIRED
            outputters          %Text;              #REQUIRED
            trace               %Text;              #IMPLIED>
            


<!-- Environment/s config section -->
<!ELEMENT environments          (environment)*>
<!ELEMENT environment           (description,(param)*)>
<!ATTLIST environment
            name                %Text;              #REQUIRED
            class               %ClassName;         #REQUIRED>
<!ELEMENT description           (#PCDATA)>


<!-- CommandShell config section -->
<!ELEMENT commandshell          (commandpath,(param)*)>
<!ATTLIST commandshell
            shell-class         %ClassName;         #IMPLIED
            table-class         %ClassName;         #IMPLIED
            parser-class        %ClassName;         #IMPLIED>

<!ELEMENT commandpath           (directory+)>
<!ELEMENT directory             (#PCDATA)>

<!-- Universal elements -->
<!ELEMENT objectstore           (backend,memorymanager,(param)*)>
<!ATTLIST objectstore
            name                ID                  #REQUIRED>

<!ELEMENT backend               (param)*>
<!ATTLIST backend
            class               %ClassName;         #REQUIRED>

<!ELEMENT memorymanager         (param)*>
<!ATTLIST memorymanager
            class               %ClassName;         #REQUIRED>

<!ELEMENT param                 ANY>
<!ATTLIST param
            name                %Text;              #REQUIRED>

